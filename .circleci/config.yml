# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  test:
    docker:
      # specify the version you desire here
       - image: circleci/ruby:2.5.3
         environment:
           PGHOST: 127.0.0.1
           PGUSER: root
           RAILS_ENV: test
           CC_TEST_REPORTER_ID: ${CC_TEST_REPORTER_ID}
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
       - image: circleci/postgres:9.6.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle
            sudo apt update
            sudo apt install postgresql-client
      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      # Run Rubocop
      # - run:
      #     name: Run rubocop
      #     command: bin/rubocop

      # Database setup
      # - run: bundle exec rake db:create
      # - run: bundle exec rake db:schema:load

      # Setup coverage report
      # - run:
      #     name: Setup Code Climate test-reporter
      #     command: |
      #       curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
      #       chmod +x ./cc-test-reporter
      # run tests!
      - run:
          name: Run tests
          command: |
            bin/rspec
            # mkdir /tmp/test-results
            # ./cc-test-reporter before-build
            # bundle exec rspec --format progress \
            #                 --format RspecJunitFormatter \
            #                 --out /tmp/test-results/rspec.xml \
            #                 --format progress
            # ./cc-test-reporter after-build --coverage-input-type simplecov --exit-code $?
      # collect reports
      # - store_test_results:
      #     path: /tmp/test-results
      # - store_artifacts:
      #     path: /tmp/test-results
      #     destination: test-results
  # deploy_staging:
  #   docker:
  #     - image: circleci/ruby:2.5.1
  #   working_directory: ~/repo
  #   steps:
  #     - checkout
  #     - run:
  #         name: Install dependencies
  #         command: |
  #           gem install dpl
  #     - run:
  #         name: Deploy to staging
  #         command: |
  #           dpl --provider=heroku --app=paynow-staging --api-key=$HEROKU_API_KEY
  # deploy_production:
  #   docker:
  #     - image: circleci/ruby:2.5.1
  #   working_directory: ~/repo
  #   steps:
  #     - checkout
  #     - run:
  #         name: Install dependencies
  #         command: |
  #           gem install dpl
  #     - run:
  #         name: Deploy to production
  #         command: |
  #           dpl --provider=heroku --app=paynow-production --api-key=$HEROKU_API_KEY
workflows:
  version: 2
  test:
    jobs:
      - test:
          context: org-global
          filters:
            tags:
              ignore: /.*/

      # - deploy_staging:
      #     context: org-global
      #     filters:
      #       branches:
      #         only: master
      #     requires:
      #       - test

      # - deploy_production:
      #     context: org-global
      #     filters:
      #       tags:
      #         only: /v[0-9]+/
      #       branches:
      #         ignore: /.*/
      #     requires:
      #       - test